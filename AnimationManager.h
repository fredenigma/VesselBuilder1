#pragma once
#include "AnimDef.h"
#include "AnimCompDef.h"

class AnimationManager {
public:
	AnimationManager(StationBuilder1 *_SB1);
	~AnimationManager();
	StationBuilder1 *SB1;
	vector<AnimDef*> anim_defs;
	//vector<ANIMCOMP_DEF> animcomp_defs;
	vector<AnimCompDef*> animcomp_defs;
	void AddAnimDef();
	void AddAnimDef(AnimDef *ad);
	void AddAnimDef(double defstate, double duration,DWORD key,string name,AnimCycleType CycleType);
	UINT NextAnimSeq();
	void SetAnimDefState(def_idx d_idx, double defstate);
	double GetAnimDefState(def_idx d_idx);
	//void SetAnimPrefix(def_idx d_idx, string prefix);
	//string GetAnimPrefix(def_idx d_idx);
	void SetAnimName(def_idx d_idx, string name);
	string GetAnimName(def_idx d_idx);
	//string GetAnimFullName(def_idx d_idx);
	void SetAnimCycleType(def_idx d_idx, AnimCycleType CycleType);
	AnimCycleType GetAnimCycleType(def_idx d_idx);
	bool IsAnimValid(def_idx d_idx);
	void InvalidateAnim(def_idx d_idx);
	bool IsAnimCompValid(def_idx d_idx);
	void InvalidateAnimComp(def_idx d_idx);
	anim_idx IdxDef2Ani(def_idx _def_idx);
	def_idx IdxAni2Def(anim_idx _anim_idx);
	void SetAnimDuration(def_idx d_idx, double duration);
	double GetAnimDuration(def_idx d_idx);
	void ResetAnimation(def_idx d_idx);
	void SetAnimationState(def_idx d_idx,double state);
	void DeleteAnimDef(def_idx d_idx);
	void AddAnimCompDef(def_idx animdef_idx, MGROUP_TRANSFORM::TYPE type);
	void AddAnimCompDef(def_idx animdef_idx, AnimCompDef* acd);
	void AddAnimCompDef(def_idx animdef_idx, string name, double state0, double state1,int mesh, int ngrps, vector<UINT>grps, int parent, int type, VECTOR3 ref, VECTOR3 axis, VECTOR3 scale, VECTOR3 shift, double angle);
	void DeleteAnimCompDef(def_idx d_idx);
	void SetAnimCompDefState0(def_idx d_idx, double newState0);
	void SetAnimCompDefState1(def_idx d_idx, double newState1);
	void SetAnimCompDefRef(def_idx d_idx, VECTOR3 newRef);
	void SetAnimCompDefScale(def_idx d_idx, VECTOR3 newScale);
	void SetAnimCompDefShift(def_idx d_idx, VECTOR3 newShift);
	void SetAnimCompDefAxis(def_idx d_idx, VECTOR3 newAxis);
	void SetAnimCompDefAngle(def_idx d_idx, double newAngle);
	void SetAnimCompDefName(def_idx d_idx, string name);
	//void SetAnimCompDefPrefix(def_idx d_idx, string prefix);
	void SetAnimCompDefMesh(def_idx d_idx, msh_idx m_idx);
	void AnimCompDefAddGroups(def_idx d_idx, vector<UINT>grps);
	void AnimCompDefRemoveGroups(def_idx d_idx, vector<UINT>grps);
	void AnimCompDefResetGroups(def_idx d_idx);
	string GetAnimCompDefName(def_idx d_idx);
	//string GetAnimCompDefFullName(def_idx d_idx);
	double GetAnimCompDefState0(def_idx d_idx);
	double GetAnimCompDefState1(def_idx d_idx);
	VECTOR3 GetAnimCompDefRef(def_idx d_idx);
	VECTOR3 GetAnimCompDefAxis(def_idx d_idx);
	VECTOR3 GetAnimCompDefShift(def_idx d_idx);
	VECTOR3 GetAnimCompDefScale(def_idx d_idx);
	double GetAnimCompDefAngle(def_idx d_idx);
	msh_idx GetAnimCompDefMesh(def_idx d_idx);
	vector<UINT> GetAnimCompDefGroups(def_idx d_idx);
	int GetAnimCompDefNGroups(def_idx d_idx);
	void AssignAnimCompDefToAnimation(def_idx comp_idx, anim_idx _anim_idx, VESSEL *v);
	//void SetAnimCompDefParent(def_idx d_idx, ANIMATIONCOMPONENT_HANDLE _parent);
	void SetAnimCompDefParent(def_idx d_idx, AnimCompDef* newParent_acd);
	UINT GetAnimCompDefCompIdx(AnimCompDef* acd);
	UINT GetAnimCompDefSeqIdx(def_idx d_idx);
	UINT GetAnimCompDefParentCompIdx(def_idx d_idx);
	ANIMATIONCOMPONENT_HANDLE GetAnimCompDefParentACH(def_idx d_idx);
	AnimCompDef* GetAnimCompDefParent(def_idx d_idx);
	MGROUP_TRANSFORM::TYPE GetAnimCompDefType(def_idx d_idx);
	ANIMATIONCOMPONENT_HANDLE GetAnimCompDefACH(def_idx d_idx);
	UINT GetAnimDefCount();
	UINT GetAnimCompDefCount();
//	void UpdateAllCompsSeq(def_idx d_idx);
	def_idx IdxSeq2Def(UINT seq_idx);
	DWORD GetAnimKey(def_idx d_idx);
	AnimCompDef* GetAnimComp(def_idx d_idx);
	AnimCompDef* GetAnimComp(def_idx animd_idx, UINT comp_idx);
	void SetAnimKey(def_idx d_idx, DWORD key);
	UINT GetAnimNComps(def_idx d_idx);
	void CompsCleanUp();
	void StartAnim(def_idx d_idx);
	void StopAnim(def_idx d_idx);
	void ResetAnim(def_idx d_idx);
	bool ManualArmMoving;
	void StartManualArm();
	void StopManualArm();
	bool ManualArmActive();
	int CurrentManualAnim;
	void SetIsAnimCompDefArmTip(def_idx d_idx, bool set);
	bool IsAnimCompDefArmTip(def_idx d_idx);
	void GetAnimCompDefTips(def_idx d_idx,VECTOR3 &v1, VECTOR3 &v2, VECTOR3 &v3);
	void SetAnimCompDefTips(def_idx d_idx,VECTOR3 v1, VECTOR3 v2, VECTOR3 v3);
	void SetAnimCompDefAttTip(def_idx d_idx, def_idx att_idx);
	def_idx GetAnimCompDefAttTip(def_idx d_idx);
	void SetAnimCompDefArmTip(def_idx d_idx, def_idx AttIdx);
	void UpdateTip(def_idx d_idx);

//	UINT anim_seq_counter;
//	UINT anim_comp_counter;
//	ANIMATIONCOMPONENT_HANDLE FindParentACH(UINT parent_comp_idx);
//	anim_idx FindAnimDefIndex(UINT comp_idx);

	void AnimationPreStep(double simt, double simdt, double mjd);
	void ConsumeAnimBufferedKey(DWORD key, bool down, char *kstate);
	void ConsumeAnimDirectKey(char *kstate);
	bool AnimEditingMode;
	void ParseCfgFile(FILEHANDLE fh);
	void WriteCfg(FILEHANDLE fh);
};